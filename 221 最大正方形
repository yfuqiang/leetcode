class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        vector<vector<char>> dp(matrix);
        if(matrix.size()==0)
        return 0;
        int i,j;
        for(i=1;i<matrix.size();i++)
        {
            for(j=1;j<matrix[0].size();j++)
            {
                if(matrix[i][j]=='0')
                dp[i][j]='0';
                else
                {
                    dp[i][j]='1';
                    int k=dp[i-1][j-1]-'0';
                    while(k!=0)
                    {
                        int left=j-k;
                        int up=i-k;
                        if(left>=0&&up>=0)
                        {
                            while(matrix[i][left]=='1'&&matrix[up][j]=='1'&&left<j&&up<i)
                            {
                                left++;
                                up++;
                            }
                            if(left==j&&up==i)
                            {
                                dp[i][j]=k+1+'0';
                                break;
                            }                            
                        }
                        k--;
                    }
                }
            }
        }
        char max='0';
        for(i=0;i<dp.size();i++)
        {
            for(j=0;j<dp[0].size();j++)
            {
                if(dp[i][j]>max)
                max=dp[i][j];
            }
        }
        return (max-'0')*(max-'0');
    }
};
