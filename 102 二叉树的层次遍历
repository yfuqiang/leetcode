/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        vector<int> all;
        if(root==NULL)
        return {};
        q.push(root);
        vector<TreeNode*> temp;
        vector<TreeNode*> temp1;
        vector<int> count;
        vector<vector<int>> res;
        while(q.empty()!=1)
        {
            TreeNode* a= q.front();
            q.pop();
            all.push_back(a->val);
            if(a->left!=NULL)
            q.push(a->left);
            if(a->right!=NULL)
            q.push(a->right);
        }
        temp.push_back(root);
        while(temp.size()!=0)
        {
            int i=0;
            count.push_back(temp.size());
            for(auto c:temp)
            {
                if(c->left!=NULL)
                temp1.push_back(c->left);
                if(c->right!=NULL)
                temp1.push_back(c->right);
                
            }
            temp=temp1;
            temp1.erase(temp1.begin(),temp1.end());
            i++;
        }
        for(int i=0;i<count.size();i++)
        {
            res.push_back({});
            for(int j=0;j<count[i];j++)
            {
                res[i].push_back(all[j]);
            }
            all.erase(all.begin(),all.begin()+count[i]);
        }
        return res;
    }
};
