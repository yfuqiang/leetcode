/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/
class Solution {
public:
    Node* connect(Node* root) {
        if(root==NULL)
        return NULL;
        bool flag1=0;
        bool flag2=0;
         if(root->left!=NULL)
         flag1=1;
         if(root->right!=NULL)
         flag2=1;
         if(flag1==1&&flag2==1)
         {
             root->left->next=root->right;
         }
         Node* root1=root;
         if(flag1||flag2)
         {
         while(root1->next!=NULL)
         {
             if(root1->next->left!=NULL)
             {
                 if(root->right!=NULL)
                 {
                     root->right->next=root1->next->left;
                    break;
                 }
                 else if(root->left!=NULL)
                 {
                     root->left->next=root1->next->left;
                    break;}
             }
             else if(root1->next->right!=NULL)
             {
                 if(root->right!=NULL)
                 {
                 root->right->next=root1->next->right;
                 break;
                 }
                 else if(root->left!=NULL)
                 {
                     root->left->next=root1->next->right;
                    break;
                 }
             }
             root1=root1->next;

         }
         }
         connect(root->right);//先把右侧链接建通，不然会连不上
         connect(root->left);
        
         return root;
    }
};
