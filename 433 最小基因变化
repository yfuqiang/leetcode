class Solution {
public:
    int minMutation(string start, string end, vector<string>& bank) {
        unordered_set<string> visited(bank.size());
        unordered_set<string> b(bank.begin(),bank.end());
        queue<string> q;
        int step=0;
        vector<char> gene{'A','G','C','T'};
        q.push(start);
        while(q.empty()!=1)
        {
            int count=q.size();
            while(count>0)
            {
                string k=q.front();
                q.pop();
                for(int i=0;i<k.size();i++)
                {
                    for(auto c:gene)
                    {
                        char temp=k[i];
                        k[i]=c;
                        if(visited.count(k)==0&&b.count(k)==1)
                        {
                            if(k==end)
                            return step+1;
                            visited.insert(k);
                            q.push(k);
                        }
                        k[i]=temp;       
                    }
                }
                count--;
            }
            step++;
        }
        return -1;
    }
    
};
