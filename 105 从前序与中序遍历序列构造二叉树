/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        if(preorder.size()==0||inorder.size()==0)
        return NULL;
        return dfs(preorder,0,preorder.size()-1,inorder,0,inorder.size()-1);
    }
    TreeNode* dfs(vector<int> preorder,int pa,int pb,vector<int> inorder,int ia,int ib)
    {
       TreeNode* root=new TreeNode(preorder[pa]);
       int i;
       for(i=ia;i<=ib;i++)
       {
           if(inorder[i]==preorder[pa])
           break;
       }
       int lengthp=i-ia;
       int lengthi=ib-i;
       if(lengthp>=1)
       root->left=dfs(preorder,pa+1,pa+lengthp,inorder,ia,i-1);
       if(lengthi>=1)
       root->right=dfs(preorder,pa+lengthp+1,pb,inorder,i+1,ib);
       return root;
    }
};
