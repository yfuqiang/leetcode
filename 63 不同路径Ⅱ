class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m,n,i,j;
        m=obstacleGrid.size();
        n=obstacleGrid[0].size();
        
        long long dp[m][n];
        dp[0][0]=obstacleGrid[0][0]==0?1:0;
        for(j=0;j<n;j++)
        {
            if(obstacleGrid[0][j]==1)
            {for(i=j;i<n;i++)
                {dp[0][i]=0;}
             break;
            }
            else
                dp[0][j]=1;
        }
        for(i=0;i<m;i++)
        {
            if(obstacleGrid[i][0]==1)
            { for(j=i;j<m;j++)
                {dp[j][0]=0;}
                break;
               }
            else
                dp[i][0]=1;
        }
        
        for(i=1;i<m;i++)
        {
            for(j=1;j<n;j++)
            {
                if(obstacleGrid[i][j]==1)
                    dp[i][j]=0;
                else
                    dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
        
        
    }
};
