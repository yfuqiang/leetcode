/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> res;
        queue<Node*> q;
        if(root==NULL)
        return {};
        q.push(root);
        while(q.empty()!=1)
        {
            int size=q.size();
            res.push_back({});
            while(size>0)
            {
                Node* temp=q.front();
                q.pop();
                res.back().push_back(temp->val);
                vector<Node*> child=temp->children;
                for(auto c:child)
                {
                    if(c!=NULL)
                    q.push(c);
                    else
                    break;
                }
                size--;
            }
        }
        return res;

    }
};
