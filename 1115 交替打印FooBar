class FooBar {
private:
    int n;
    std::mutex mu;
    condition_variable cv1;
    condition_variable cv2;
    int count=1;

public:
    FooBar(int n) {
        this->n = n;
    }

    void foo(function<void()> printFoo) {
        
        for (int i = 0; i < n; i++) {
            unique_lock<std::mutex> a(mu);
            cv1.wait(a,[this](){return count==1;});
        	// printFoo() outputs "foo". Do not change or remove this line.
        	printFoo();
            count++;
            cv2.notify_one();
        }
    }

    void bar(function<void()> printBar) {
        
        for (int i = 0; i < n; i++) {
            unique_lock<std::mutex> a(mu);
            cv2.wait(a,[this](){return count==2;});
        	// printBar() outputs "bar". Do not change or remove this line.
        	printBar();
            count--;
            cv1.notify_one();
        }
    }
};
