class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<vector<int>> graph(numCourses);
        vector<int> indegree(numCourses);
        vector<int> ans;
        for(auto c:prerequisites)
        {
            indegree[c[0]]++;
            graph[c[1]].push_back(c[0]);
        }
        queue<int> q;
        for(int i=0;i<indegree.size();i++)
        {
            if(indegree[i]==0)
            q.push(i);
        }
        while(q.empty()!=1)
        {
            int temp=q.front();
            q.pop();
            ans.push_back(temp);
            for(auto c:graph[temp])
            {
                indegree[c]--;
                if(indegree[c]==0)
                {
                    q.push(c);
                }
            }
        }
        if(ans.size()==numCourses)
        return true;
        else
        return false;
    }
};
