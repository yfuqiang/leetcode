class Solution {
public:
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        dfs(nums,0,{});
        return res;
    }
    void dfs(vector<int> &nums,int begin,vector<int> temp)
    {
        if(s.find(temp)==s.end()&&temp.size()>1)
        {res.push_back(temp);
        s.insert(temp);}
        int i;
        for(i=begin;i<nums.size();i++)
        {
            if(temp.size()==0||nums[i]>=temp.back())
            {
                temp.push_back(nums[i]);
                dfs(nums,i+1,temp);
                temp.pop_back();
            }
        }
        return;

    }
    vector<vector<int>> res;
    set<vector<int>> s;
};
