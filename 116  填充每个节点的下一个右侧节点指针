/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/
class Solution {
public:
    Node* connect(Node* root) {
        if(root==NULL)
        return NULL;
        if(root->left==NULL)
        return root;
        connect(root->left);
        connect(root->right);
        root->left->next=root->right;
        Node* a=root->left;
        Node*b=root->right;
        while(a->right!=NULL)
        {
            a->right->next=b->left;
            a=a->right;
            b=b->left;
        }

        return root;
    }
};
