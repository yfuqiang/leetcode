class Solution {
public:
    int compress(vector<char>& chars) {
        int i=0;
        int j=0;
        int k=0;
        while(i<chars.size())
        {
            int count=0;
            while(j<chars.size())
            {
                if(chars[i]==chars[j])
                {count++;
                j++;}
                else
                break;
            }
            if(count==1)
            {
                chars[k]=chars[i];
                i=j;
                k++;
            }
            else
            {
            if(count<10)
            {
            chars[k]=chars[i];
            chars[k+1]=count+'0';
            k=k+2;
            }
            else
            {
                chars[k]=chars[i];
                k++;
                stack<int> s;
                while(count!=0)
                {
                    s.push(count%10);
                    count/=10;
                }
                while(s.empty()!=1)
                {
                    chars[k]=s.top()+'0';
                    s.pop();
                    k++;
                }
            }
            i=j;
            }
            
            if(j==chars.size())
            break;
        }
        chars.erase(chars.begin()+k,chars.end());
        return chars.size();
    }
};
