class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        if(matrix.size()==0)
        return {};
        vector<vector<int>> count=matrix;

        vector<int> res;
        int i=0,j=0;
        for(i=0;i<matrix.size();i++)
        {
            for(j=0;j<matrix[0].size();j++)
            count[i][j]=0;
        }
        i=0,j=0;
        res.push_back(matrix[0][0]);
        count[0][0]=1;
        while(1)
        {
            if(i>0&&count[i-1][j]!=1&&(j==0||(j>0&&count[i-1][j-1]==1)))
             {
                res.push_back(matrix[i-1][j]);
                count[i-1][j]=1;
                i--;
                continue;
            }
            
            if(j<matrix[0].size()-1&&count[i][j+1]!=1)
            {
                res.push_back(matrix[i][j+1]);
                count[i][j+1]=1;
                j++;
                continue;
            }
            if(i<matrix.size()-1&&count[i+1][j]!=1)
            {
                res.push_back(matrix[i+1][j]);
                count[i+1][j]=1;
                i++;
                continue;
            }
            if(j>0&&count[i][j-1]!=1)
            {
                res.push_back(matrix[i][j-1]);
                count[i][j-1]=1;
                j--;
                continue;
            }
            if(i>0&&count[i-1][j]!=1)
            {
                res.push_back(matrix[i-1][j]);
                count[i-1][j]=1;
                i--;
                continue;
            }
            break;
        }
        return res;
    }
};
