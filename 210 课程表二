class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
            vector<int> indegree(numCourses);
            vector<vector<int>> graph(numCourses);
            int i;
            for(auto c:prerequisites)
            {
                indegree[c[0]]++;
                graph[c[1]].push_back(c[0]);
            }
            queue<int> q;
            vector<int> ans;
            for(i=0;i<numCourses;i++)
            {
                if(indegree[i]==0)
                q.push(i);
            }
            while(q.empty()!=1)
            {
                int temp=q.front();
                q.pop();
                ans.push_back(temp);
                for(auto c:graph[temp])
                {
                    indegree[c]--;
                    if(indegree[c]==0)
                    q.push(c);
                }
            }
            if(ans.size()!=numCourses)
            return {};
            return ans;
    }
};
