class Solution {
public:
    struct cmp{
        bool operator ()(pair<int, int> &a, pair<int, int> &b) {
		    return a.first+a.second<b.first+b.second;
	    }
    };

    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        int i,j;
        vector<vector<int>> res;
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp> q;
        for(i=0;i<nums1.size();i++)
        {
            for(j=0;j<nums2.size();j++)
            {
                if(q.size()<k)
                q.push({nums1[i],nums2[j]});
                else
                {
                    if(nums1[i]+nums2[j]<q.top().first+q.top().second)
                    {
                        q.pop();
                        q.push({nums1[i],nums2[j]});
                    }
                    
                }
            }
        }
         while(!q.empty()){
            pair<int,int> top=q.top();
            res.push_back({top.first,top.second});
            q.pop();
        }
         return res;


    }
};
