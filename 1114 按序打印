class Foo {
public:
    Foo() {
       
    }

    void first(function<void()> printFirst) {
        std::unique_lock<std::mutex> a(mu);
        // printFirst() outputs "first". Do not change or remove this line.
        printFirst();
        count++;
        c1.notify_one();
    }

    void second(function<void()> printSecond) {
        std::unique_lock<std::mutex> a(mu);
        c1.wait(a,[=](){return count==2;});
        count++;
        // printSecond() outputs "second". Do not change or remove this line.
        printSecond();
        c2.notify_one();
    }

    void third(function<void()> printThird) {
        std::unique_lock<std::mutex> a(mu);
        c2.wait(a,[=](){return count==3;});
        // printThird() outputs "third". Do not change or remove this line.
        printThird();
    }
    std::mutex mu;
    std::condition_variable c1;
    std::condition_variable c2;
    int count=1;
};
