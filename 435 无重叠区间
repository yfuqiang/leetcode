class Solution {
public:
   
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if(intervals.size()==0)return 0;
        sort(intervals.begin(),intervals.end(),[](vector<int> a,vector<int> b){
            return a[1]<b[1];
        });

        int count=1;//组成不重叠的区间个数
        int end=intervals[0][1];
        for(int i=1;i<intervals.size();i++)
        {
            if(intervals[i][0]<end){
                continue;
            }
            count++;
            end=intervals[i][1];//使end每次最小，给start留出更多的选择空间，而下一个符合的start一定是最小的end
        }
        return intervals.size()-count;
    }
};
